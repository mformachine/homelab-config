---
# 1. POSTGRESQL DEPLOYMENT
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: n8n-prod
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc
      containers:
        - name: postgres
          image: postgres:16-alpine
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: n8n-credentials
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: n8n-credentials
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: n8n-credentials
                  key: POSTGRES_DB
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "500m"
---
# 2. POSTGRESQL SERVICE (For internal K8s communication)
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: n8n-prod
spec:
  selector:
    app: postgres
  ports:
    - port: 5432
      targetPort: 5432
---
# 3. REDIS DEPLOYMENT
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: n8n-prod
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      volumes:
        - name: redis-storage
          persistentVolumeClaim:
            claimName: redis-pvc
      containers:
        - name: redis
          image: redis:7-alpine
          args:
            - redis-server
            - --appendonly
            - "yes"
            - --requirepass
            - $(REDIS_PASSWORD)
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: n8n-credentials
                  key: REDIS_PASSWORD
          ports:
            - containerPort: 6379
          volumeMounts:
            - name: redis-storage
              mountPath: /data
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "250m"
---
# 4. REDIS SERVICE (For internal K8s communication)
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: n8n-prod
spec:
  selector:
    app: redis
  ports:
    - port: 6379
      targetPort: 6379
---
